@model PagedList.IPagedList<WhiteCloudHomestayManagementSystem.Models.Reservation>
@using PagedList.Mvc;

@{
    ViewBag.Title = "Reservations";
    Layout = "~/Areas/Admin/Views/Shared/_AdminNavbar.cshtml";
}
<link href="~/Content/css/pagination.css" rel="stylesheet" type="text/css" />


<h2>Reservations</h2>

<button type="button" class="btn btn-primary" onclick="location.href='@Url.Action("Create")'">
    <i class="bi bi-file-earmark-plus"></i> Create New
</button>


<form method="get" action="@Url.Action("Index")" class="search-form">
    <div class="form-group">
        <label for="searchString">Find by name:</label>
        <div class="input-group w-50">
            @Html.TextBox("searchString", ViewBag.CurrentFilter as string, new { @class = "form-control", placeholder = "Enter name..." })
            <div class="input-group-append">
                <button type="submit" class="btn btn-primary">
                    <i class="bi bi-search"></i> Search
                </button>
            </div>
        </div>
    </div>
</form>

<form method="get" action="@Url.Action("Index")" class="today-form">
    <div class="form-group">
        <button type="submit" name="today" class="btn btn-primary">
            <i class="bi bi-calendar-date"></i> Today
        </button>
    </div>
    <input type="hidden" name="searchString" value="@ViewBag.CurrentFilter" />
</form>



@if (!Model.Any())
{
    <div class="alert alert-info">
        No reservations available.
    </div>
}
else
{
    <table class="table table-bordered table-striped table-hover">
        <tr>
            <th>
                @Html.ActionLink("Check In Date", "Index", new { sortOrder = ViewBag.CheckInDateSortParm })
            </th>
            <th>
                @Html.ActionLink("Check Out Date", "Index", new { sortOrder = ViewBag.CheckOutDateSortParm })
            </th>
            <th>
                @Html.ActionLink("Booking Date", "Index", new { sortOrder = ViewBag.BookingDateSortParm })
            </th>
            <th>
                Adults and Child
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().SpecialRequests)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().Notes)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().Customer.FullName)
            </th>
            <th>
                By
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().Homestay.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().ReservationStatus.StatusName)
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.CheckInDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CheckOutDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.BookingDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.NumOfAdults)|@Html.DisplayFor(modelItem => item.NumOfChild)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.SpecialRequests)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Notes)
                </td>
                <td>
                    <a href="@Url.Action("Details", "Customers", new { id = item.CustomerId })">
                        @Html.DisplayFor(modelItem => item.Customer.FullName)
                    </a>
                </td>
                <td>
                    <a href="@Url.Action("Details", "Employees", new { id = item.EmployeeId })">
                        @Html.DisplayFor(modelItem => item.Employee.FullName)
                    </a>
                </td>
                .
                <td>
                    @Html.DisplayFor(modelItem => item.Homestay.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ReservationStatus.StatusName)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.ReservationId }, new { @class = "btn btn-warning" }) |
                    @Html.ActionLink("Details", "Details", new { id = item.ReservationId }, new { @class = "btn btn-info" }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.ReservationId }, new { @class = "btn btn-danger" })
                </td>

            </tr>
        }
    </table>

    <div class="clearfix pagination-buttons">
        @Html.PagedListPager(Model,
            page => Url.Action("Index", new { page, searchString = ViewBag.CurrentFilter }),
            new PagedListRenderOptions
            {
                DisplayLinkToFirstPage = PagedListDisplayMode.IfNeeded,
                DisplayLinkToLastPage = PagedListDisplayMode.IfNeeded,
                DisplayLinkToPreviousPage = PagedListDisplayMode.IfNeeded,
                DisplayLinkToNextPage = PagedListDisplayMode.IfNeeded,
                DisplayLinkToIndividualPages = true,
                MaximumPageNumbersToDisplay = 5,
                LinkToFirstPageFormat = "First",
                LinkToLastPageFormat = "Last",
                LinkToPreviousPageFormat = "<i class='bi bi-arrow-left'></i>",
                LinkToNextPageFormat = "<i class='bi bi-arrow-right'></i>",
                PageCountAndCurrentLocationFormat = "Page {0} of {1}",
                ItemSliceAndTotalFormat = "Displaying items {0} through {1} of {2} total"
            })
    </div>
}
