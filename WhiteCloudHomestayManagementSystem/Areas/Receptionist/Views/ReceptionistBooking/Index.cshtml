@using PagedList.Mvc;
@using PagedList;
@model IPagedList<WhiteCloudHomestayManagementSystem.Models.Booking>

@{
    ViewBag.Title = "Booking List";
    Layout = "~/Areas/Receptionist/Views/Shared/_ReceptionistNavbar.cshtml";
}
<link href="~/Content/css/pagination.css" rel="stylesheet" />

<div class="container">
    <h2 class="my-4 text-center" style="color: #007bff;"><i class="bi bi-calendar2-event"></i> Booking List</h2>
    <a href="@Url.Action("Create")" class="btn btn-success mb-3">
        <i class="bi bi-plus-circle"></i> Create New
    </a>


    @using (Html.BeginForm("Index", "ReceptionistBooking", FormMethod.Get))
    {
        <div class="row mb-3">
            <div class="col-md-6">
                <div class="input-group">
                    <span class="input-group-text">Search by name:</span>
                    @Html.TextBox("searchString", ViewBag.CurrentFilter as string, new { @class = "form-control" })
                    <button type="submit" class="btn btn-primary"><i class="bi bi-search"></i> Search</button>
                </div>
            </div>
            <div class="col-md-6 text-end">
                <div class="form-group row justify-content-end">
                    <label for="pageSize" class="col-auto col-form-label">Page size:</label>
                    <div class="col-auto">
                        @Html.DropDownList("pageSize", new List<SelectListItem>
                        {
                            new SelectListItem { Text = "5", Value = "5" },
                            new SelectListItem { Text = "10", Value = "10", Selected = true },
                            new SelectListItem { Text = "15", Value = "15" }
                        }, new { @class = "form-select", onchange = "this.form.submit();" })
                    </div>
                </div>
            </div>
        </div>
    }


    @if (Model.Any())
    {
        <table class="table table-striped table-bordered">
            <thead class="thead-dark">
                <tr class="table-primary">
                    <th>
                        @Html.ActionLink("Customer Name", "Index", new { sortOrder = ViewBag.FullNameSortParm, currentFilter = ViewBag.CurrentFilter, pageSize = ViewBag.PageSize }, new { @class = "text-dark" })
                    </th>
                    <th>
                        @Html.ActionLink("Homestay Name", "Index", new { sortOrder = ViewBag.HomestayNameSortParm, currentFilter = ViewBag.CurrentFilter, pageSize = ViewBag.PageSize }, new { @class = "text-dark" })
                    </th>
                    <th>
                        @Html.ActionLink("Check-In Date", "Index", new { sortOrder = ViewBag.CheckInDateSortParm, currentFilter = ViewBag.CurrentFilter, pageSize = ViewBag.PageSize }, new { @class = "text-dark" })
                    </th>
                    <th>
                        @Html.ActionLink("Check-Out Date", "Index", new { sortOrder = ViewBag.CheckOutDateSortParm, currentFilter = ViewBag.CurrentFilter, pageSize = ViewBag.PageSize }, new { @class = "text-dark" })
                    </th>
                    <th>
                        @Html.ActionLink("Status", "Index", new { sortOrder = ViewBag.StatusSortParm, currentFilter = ViewBag.CurrentFilter, pageSize = ViewBag.PageSize }, new { @class = "text-dark" })
                    </th>
                    <th>
                        @Html.ActionLink("Paid", "Index", new { sortOrder = ViewBag.PaidSortParm, currentFilter = ViewBag.CurrentFilter, pageSize = ViewBag.PageSize }, new { @class = "text-dark" })
                    </th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>@Html.DisplayFor(modelItem => item.Customer.FullName)</td>
                        <td>@Html.DisplayFor(modelItem => item.Homestay.Name)</td>
                        <td>@Html.DisplayFor(modelItem => item.CheckInDate)</td>
                        <td>@Html.DisplayFor(modelItem => item.CheckOutDate)</td>
                        <td>@Html.DisplayFor(modelItem => item.Status)</td>
                        <td>@Html.DisplayFor(modelItem => item.Paid)</td>
                        <td>
                            <a href="@Url.Action("Edit", new { id = item.BookingID })" class="btn btn-primary btn-sm">
                                <i class="bi bi-pencil"></i> Edit
                            </a>
                            <a href="@Url.Action("Details", new { id = item.BookingID })" class="btn btn-info btn-sm">
                                <i class="bi bi-info"></i> Details
                            </a>
                            <a href="@Url.Action("Delete", new { id = item.BookingID })" class="btn btn-danger btn-sm">
                                <i class="bi bi-trash"></i> Delete
                            </a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>

        <div class="pagination-container">
            @Html.PagedListPager(Model, page => Url.Action("Index", new { page, pageSize = ViewBag.PageSize, sortOrder = ViewBag.CurrentSort, searchString = ViewBag.CurrentFilter }),
            new PagedListRenderOptions
            {
                DisplayLinkToFirstPage = PagedListDisplayMode.Always,
                DisplayLinkToLastPage = PagedListDisplayMode.Always,
                DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
                DisplayLinkToNextPage = PagedListDisplayMode.Always,
                DisplayLinkToIndividualPages = true,
                DisplayPageCountAndCurrentLocation = false,
                MaximumPageNumbersToDisplay = 5,
                DisplayEllipsesWhenNotShowingAllPageNumbers = true,
                EllipsesFormat = "…",
                LinkToFirstPageFormat = "<button type='button' class='btn btn-light border'><i class='bi bi-chevron-double-left'></i></button>",
                LinkToPreviousPageFormat = "<button type='button' class='btn btn-light border'><i class='bi bi-chevron-left'></i></button>",
                LinkToNextPageFormat = "<button type='button' class='btn btn-light border'><i class='bi bi-chevron-right'></i></button>",
                LinkToLastPageFormat = "<button type='button' class='btn btn-light border'><i class='bi bi-chevron-double-right'></i></button>",
                ContainerDivClasses = new[] { "pagination-container" },
                UlElementClasses = new[] { "pagination", "justify-content-center" },
                LiElementClasses = new[] { "page-item" },
            })
        </div>
    }
    else
    {
        <p>No bookings available.</p>
    }
</div>
