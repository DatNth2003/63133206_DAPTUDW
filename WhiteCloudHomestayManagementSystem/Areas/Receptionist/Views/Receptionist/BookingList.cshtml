@using PagedList.Mvc;
@using PagedList;
@model IPagedList<WhiteCloudHomestayManagementSystem.Models.Booking>

@{
    ViewBag.Title = "Booking List";
}

<h2>Booking List</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>

@using (Html.BeginForm("BookingList", "Receptionist", FormMethod.Get))
{
    <p>
        Search by name: @Html.TextBox("searchString", ViewBag.CurrentFilter as string)
        <input type="submit" value="Search" />
    </p>
}

<table class="table">
    <tr>
        <th>
            @Html.ActionLink("Customer Name", "BookingList", new { sortOrder = ViewBag.FullNameSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("Homestay Name", "BookingList", new { sortOrder = ViewBag.HomestayNameSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("Check-In Date", "BookingList", new { sortOrder = ViewBag.CheckInDateSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("Check-Out Date", "BookingList", new { sortOrder = ViewBag.CheckOutDateSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("Status", "BookingList", new { sortOrder = ViewBag.StatusSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("Paid", "BookingList", new { sortOrder = ViewBag.PaidSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th></th>
    </tr>
    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Customer.FullName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Homestay.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CheckInDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CheckOutDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Status)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Paid)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.BookingID }) |
                @Html.ActionLink("Details", "Details", new { id = item.BookingID }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.BookingID })
            </td>
        </tr>
    }
</table>

<div class="pagination-container">
    @Html.PagedListPager(Model, page => Url.Action("BookingList", new { page, sortOrder = ViewBag.CurrentSort, searchString = ViewBag.CurrentFilter }), PagedListRenderOptions.PageNumbersOnly)
</div>
